AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend-taskhub-repo

  Sample SAM Template for Backend-taskhub-repo

Resources:
  ## Lambda Function
  TaskHubLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resolvers.handler
      Runtime: nodejs20.x
      CodeUri: src/resolver/
      MemorySize: 128
      Timeout: 5
      Policies:
        - AmazonDynamoDBFullAccess # Grant Lambda full access to DynamoDB

  ## Resolvers
  GetItemResolver:
    Type: AWS::AppSync::Resolver
    Properties:
      ApiId: !GetAtt TaskHubAppsyncApi.ApiId
      TypeName: Query
      FieldName: getUserInformation
      DataSourceName: !GetAtt TaskHubLambdaFunction.Name
      RequestMappingTemplate: |
        {
          "version": "2018-05-29",
          "operation": "Invoke",
          "payload": {
            "field": "getItem",
          }
        }
      ResponseMappingTemplate: "$util.toJson($context.result)"

  ## AppSync API
  TaskHubAppsyncApi:
    Type: AWS::AppSync::GraphQLApi
    Properties:
      Name: TaskHubAppsyncApi
      AuthenticationType: API_KEY

  TaskHubGraphQLSchema:
    Type: AWS::AppSync::GraphQLSchema
    Properties:
      ApiId: !GetAtt TaskHubAppsyncApi.ApiId
      DefinitionS3Location: src/schema/schema.graphql

  ## Data Source - Lambda
  TaskHubLambdaDataSource:
    Type: AWS::AppSync::DataSource
    Properties:
      ApiId: !GetAtt TaskHubAppsyncApi.ApiId
      Name: LambdaDataSource
      Type: AWS_LAMBDA
      LambdaConfig:
        LambdaFunctionArn: !GetAtt TaskHubLambdaFunction.Arn
      ServiceRoleArn: !GetAtt AppSyncLambdaRole.Arn

  ## DynamoDB Table
  TaskHubDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Users
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  ## IAM Role for AppSync to Invoke Lambda
  TaskHubAppSyncLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: appsync.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt TaskHubLambdaFunction.Arn
Outputs:
  TaskHubOutput:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
